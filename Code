from sqlalchemy import create_engine
import sqlalchemy
import time
 
class SrSQL:
    def __init__(self, num_floors):
        self.engine = create_engine('mysql://device:sr_proj@35.164.180.85')
        self.connected = 0
        self.num = num_floors
        self.prev = []
        self.num_cars = []
        while (not self.connected):
            try:
                self.engine.execute('USE server;')
            except sqlalchemy.exc.OperationalError:
                print("Couldn't connect, trying again...\n")
                continue
            print("Connection successful...")
            self.connected = 1
 
        for i in range(self.num):
            self.prev.append(0)
            self.num_cars.append(0)
 
    def test_loop(self):
        while (True):
            for i in range(self.num):
                self.num_cars[i] = self.get_nc(i + 1)
                if (self.num_cars[i] == None):
                    break
                elif (self.num_cars[i] != self.prev[i]):
                    self.prev[i] = self.num_cars[i]
                    print("Floor: ", i + 1, " NumCars: ", self.num_cars[i])
 
    def get_nc(self, floor):
        sel = '''SELECT NumCars FROM garage WHERE Floor = ''' + str(floor)
        try:
            result = self.engine.execute(sel)
        except sqlalchemy.exc.OperationalError:
            print("Not connected to database...")
            self.engine = create_engine('mysql://device:sr_proj@35.164.180.85')
            self.engine.execute('USE server;')
            return None
        tuples = result.fetchall()
        num_cars = int(tuples[0][0])
        if (num_cars < 0):
            return 0
        return num_cars
 
 
sql = SrSQL(4)
sql.test_loop()
